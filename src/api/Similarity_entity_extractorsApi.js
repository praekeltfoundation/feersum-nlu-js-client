/**
 * FeersumNLU API
 * This is the HTTP API for Feersum NLU. See https://github.com/praekelt/feersum-nlu-api-wrappers for examples of how to use the API.
 *
 * OpenAPI spec version: 2.0.3
 * Contact: nlu@feersum.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/EntityList', 'model/SimilarityEntCreateDetails', 'model/SimilarityInstanceDetail', 'model/SimilarityInstanceDetailList', 'model/TextInput'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/EntityList'), require('../model/SimilarityEntCreateDetails'), require('../model/SimilarityInstanceDetail'), require('../model/SimilarityInstanceDetailList'), require('../model/TextInput'));
  } else {
    // Browser globals (root is window)
    if (!root.FeersumNluApi) {
      root.FeersumNluApi = {};
    }
    root.FeersumNluApi.Similarity_entity_extractorsApi = factory(root.FeersumNluApi.ApiClient, root.FeersumNluApi.EntityList, root.FeersumNluApi.SimilarityEntCreateDetails, root.FeersumNluApi.SimilarityInstanceDetail, root.FeersumNluApi.SimilarityInstanceDetailList, root.FeersumNluApi.TextInput);
  }
}(this, function(ApiClient, EntityList, SimilarityEntCreateDetails, SimilarityInstanceDetail, SimilarityInstanceDetailList, TextInput) {
  'use strict';

  /**
   * Similarity_entity_extractors service.
   * @module api/Similarity_entity_extractorsApi
   * @version 2.0.3
   */

  /**
   * Constructs a new Similarity_entity_extractorsApi. 
   * @alias module:api/Similarity_entity_extractorsApi
   * @class
   * @param {module:ApiClient} apiClient Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the controllersSimilarityEntityExtractorsControllerSimilarityEntityExtractorCreate operation.
     * @callback module:api/Similarity_entity_extractorsApi~controllersSimilarityEntityExtractorsControllerSimilarityEntityExtractorCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SimilarityInstanceDetail} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a word similarity entity extractor.
     * Create a new word similarity entity extractor or load one from the store.
     * @param {module:model/SimilarityEntCreateDetails} similarityEntCreateDetails The details of the instance to create.
     * @param {module:api/Similarity_entity_extractorsApi~controllersSimilarityEntityExtractorsControllerSimilarityEntityExtractorCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SimilarityInstanceDetail}
     */
    this.controllersSimilarityEntityExtractorsControllerSimilarityEntityExtractorCreate = function(similarityEntCreateDetails, callback) {
      var postBody = similarityEntCreateDetails;

      // verify the required parameter 'similarityEntCreateDetails' is set
      if (similarityEntCreateDetails === undefined || similarityEntCreateDetails === null) {
        throw new Error("Missing the required parameter 'similarityEntCreateDetails' when calling controllersSimilarityEntityExtractorsControllerSimilarityEntityExtractorCreate");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APIKeyHeader'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = SimilarityInstanceDetail;

      return this.apiClient.callApi(
        '/similarity_entity_extractors', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the controllersSimilarityEntityExtractorsControllerSimilarityEntityExtractorGetDetails operation.
     * @callback module:api/Similarity_entity_extractorsApi~controllersSimilarityEntityExtractorsControllerSimilarityEntityExtractorGetDetailsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SimilarityInstanceDetail} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get details of named instance.
     * Get the details of the named similarity entity extractor instance.
     * @param {String} instanceName The name of the model instance.
     * @param {module:api/Similarity_entity_extractorsApi~controllersSimilarityEntityExtractorsControllerSimilarityEntityExtractorGetDetailsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SimilarityInstanceDetail}
     */
    this.controllersSimilarityEntityExtractorsControllerSimilarityEntityExtractorGetDetails = function(instanceName, callback) {
      var postBody = null;

      // verify the required parameter 'instanceName' is set
      if (instanceName === undefined || instanceName === null) {
        throw new Error("Missing the required parameter 'instanceName' when calling controllersSimilarityEntityExtractorsControllerSimilarityEntityExtractorGetDetails");
      }


      var pathParams = {
        'instance_name': instanceName
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APIKeyHeader'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = SimilarityInstanceDetail;

      return this.apiClient.callApi(
        '/similarity_entity_extractors/{instance_name}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the controllersSimilarityEntityExtractorsControllerSimilarityEntityExtractorGetDetailsAll operation.
     * @callback module:api/Similarity_entity_extractorsApi~controllersSimilarityEntityExtractorsControllerSimilarityEntityExtractorGetDetailsAllCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SimilarityInstanceDetailList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get list of loaded similarity entity extractors.
     * Get the list of loaded similarity entity extractors.
     * @param {module:api/Similarity_entity_extractorsApi~controllersSimilarityEntityExtractorsControllerSimilarityEntityExtractorGetDetailsAllCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SimilarityInstanceDetailList}
     */
    this.controllersSimilarityEntityExtractorsControllerSimilarityEntityExtractorGetDetailsAll = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APIKeyHeader'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = SimilarityInstanceDetailList;

      return this.apiClient.callApi(
        '/similarity_entity_extractors', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the controllersSimilarityEntityExtractorsControllerSimilarityEntityExtractorRetrieve operation.
     * @callback module:api/Similarity_entity_extractorsApi~controllersSimilarityEntityExtractorsControllerSimilarityEntityExtractorRetrieveCallback
     * @param {String} error Error message, if any.
     * @param {module:model/EntityList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Extract information based on word similarity.
     * Extract the word entities that are similar to the list of words used to create this model instance.
     * @param {String} instanceName The name of the model instance.
     * @param {module:model/TextInput} textInput The input text.
     * @param {module:api/Similarity_entity_extractorsApi~controllersSimilarityEntityExtractorsControllerSimilarityEntityExtractorRetrieveCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/EntityList}
     */
    this.controllersSimilarityEntityExtractorsControllerSimilarityEntityExtractorRetrieve = function(instanceName, textInput, callback) {
      var postBody = textInput;

      // verify the required parameter 'instanceName' is set
      if (instanceName === undefined || instanceName === null) {
        throw new Error("Missing the required parameter 'instanceName' when calling controllersSimilarityEntityExtractorsControllerSimilarityEntityExtractorRetrieve");
      }

      // verify the required parameter 'textInput' is set
      if (textInput === undefined || textInput === null) {
        throw new Error("Missing the required parameter 'textInput' when calling controllersSimilarityEntityExtractorsControllerSimilarityEntityExtractorRetrieve");
      }


      var pathParams = {
        'instance_name': instanceName
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APIKeyHeader'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = EntityList;

      return this.apiClient.callApi(
        '/similarity_entity_extractors/{instance_name}/retrieve', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
