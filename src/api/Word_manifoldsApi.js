/**
 * FeersumNLU API
 * This is the HTTP API for Feersum NLU. See https://github.com/praekelt/feersum-nlu-api-wrappers for examples of how to use the API.
 *
 * OpenAPI spec version: 2.0.3
 * Contact: nlu@feersum.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/CreateDetails', 'model/InstanceDetail', 'model/NewWordList', 'model/TextInput', 'model/WordAndDistanceList', 'model/WordAndThreshold'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/CreateDetails'), require('../model/InstanceDetail'), require('../model/NewWordList'), require('../model/TextInput'), require('../model/WordAndDistanceList'), require('../model/WordAndThreshold'));
  } else {
    // Browser globals (root is window)
    if (!root.FeersumNluApi) {
      root.FeersumNluApi = {};
    }
    root.FeersumNluApi.Word_manifoldsApi = factory(root.FeersumNluApi.ApiClient, root.FeersumNluApi.CreateDetails, root.FeersumNluApi.InstanceDetail, root.FeersumNluApi.NewWordList, root.FeersumNluApi.TextInput, root.FeersumNluApi.WordAndDistanceList, root.FeersumNluApi.WordAndThreshold);
  }
}(this, function(ApiClient, CreateDetails, InstanceDetail, NewWordList, TextInput, WordAndDistanceList, WordAndThreshold) {
  'use strict';

  /**
   * Word_manifolds service.
   * @module api/Word_manifoldsApi
   * @version 2.0.3
   */

  /**
   * Constructs a new Word_manifoldsApi. 
   * @alias module:api/Word_manifoldsApi
   * @class
   * @param {module:ApiClient} apiClient Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the controllersWordManifoldsControllerWordManifoldAddSimilarWords operation.
     * @callback module:api/Word_manifoldsApi~controllersWordManifoldsControllerWordManifoldAddSimilarWordsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InstanceDetail} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Add new words.
     * Add new words to the manifold that are similar to existing words and save the manifold. Warning! - Because this operation saves the updated word manifold to the store it could take a few seconds to complete. Returns the details of the updated instance.
     * @param {String} instanceName The name of the model instance.
     * @param {module:model/NewWordList} newWordList List of new words.
     * @param {module:api/Word_manifoldsApi~controllersWordManifoldsControllerWordManifoldAddSimilarWordsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InstanceDetail}
     */
    this.controllersWordManifoldsControllerWordManifoldAddSimilarWords = function(instanceName, newWordList, callback) {
      var postBody = newWordList;

      // verify the required parameter 'instanceName' is set
      if (instanceName === undefined || instanceName === null) {
        throw new Error("Missing the required parameter 'instanceName' when calling controllersWordManifoldsControllerWordManifoldAddSimilarWords");
      }

      // verify the required parameter 'newWordList' is set
      if (newWordList === undefined || newWordList === null) {
        throw new Error("Missing the required parameter 'newWordList' when calling controllersWordManifoldsControllerWordManifoldAddSimilarWords");
      }


      var pathParams = {
        'instance_name': instanceName
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APIKeyHeader'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = InstanceDetail;

      return this.apiClient.callApi(
        '/word_manifolds/{instance_name}/vocab', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the controllersWordManifoldsControllerWordManifoldCreate operation.
     * @callback module:api/Word_manifoldsApi~controllersWordManifoldsControllerWordManifoldCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InstanceDetail} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a word manifold model.
     * Create a new word manifold model using an input file or load a model from the store. Warning! - These models are quite big and each takes a few seconds to load/create. Returns the details of the new or loaded instance.
     * @param {module:model/CreateDetails} createDetails The details of the instance to create.
     * @param {module:api/Word_manifoldsApi~controllersWordManifoldsControllerWordManifoldCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InstanceDetail}
     */
    this.controllersWordManifoldsControllerWordManifoldCreate = function(createDetails, callback) {
      var postBody = createDetails;

      // verify the required parameter 'createDetails' is set
      if (createDetails === undefined || createDetails === null) {
        throw new Error("Missing the required parameter 'createDetails' when calling controllersWordManifoldsControllerWordManifoldCreate");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APIKeyHeader'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = InstanceDetail;

      return this.apiClient.callApi(
        '/word_manifolds', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the controllersWordManifoldsControllerWordManifoldGetSimilarWords operation.
     * @callback module:api/Word_manifoldsApi~controllersWordManifoldsControllerWordManifoldGetSimilarWordsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WordAndDistanceList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Find similar words.
     * Returns words from the manifold that are similar to the parameter word.
     * @param {String} instanceName The name of the model instance.
     * @param {module:model/WordAndThreshold} wordAndThreshold A word token and an accompanying threshold.
     * @param {module:api/Word_manifoldsApi~controllersWordManifoldsControllerWordManifoldGetSimilarWordsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WordAndDistanceList}
     */
    this.controllersWordManifoldsControllerWordManifoldGetSimilarWords = function(instanceName, wordAndThreshold, callback) {
      var postBody = wordAndThreshold;

      // verify the required parameter 'instanceName' is set
      if (instanceName === undefined || instanceName === null) {
        throw new Error("Missing the required parameter 'instanceName' when calling controllersWordManifoldsControllerWordManifoldGetSimilarWords");
      }

      // verify the required parameter 'wordAndThreshold' is set
      if (wordAndThreshold === undefined || wordAndThreshold === null) {
        throw new Error("Missing the required parameter 'wordAndThreshold' when calling controllersWordManifoldsControllerWordManifoldGetSimilarWords");
      }


      var pathParams = {
        'instance_name': instanceName
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APIKeyHeader'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = WordAndDistanceList;

      return this.apiClient.callApi(
        '/word_manifolds/{instance_name}/similar_words', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the controllersWordManifoldsControllerWordManifoldSpellCorrect operation.
     * @callback module:api/Word_manifoldsApi~controllersWordManifoldsControllerWordManifoldSpellCorrectCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WordAndDistanceList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Spell correct a word.
     * Spell correct a word replacing it with the most likely word from the manifold. Returns one or more scored candidate words.
     * @param {String} instanceName The name of the model instance.
     * @param {module:model/TextInput} textInput The input text.
     * @param {module:api/Word_manifoldsApi~controllersWordManifoldsControllerWordManifoldSpellCorrectCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WordAndDistanceList}
     */
    this.controllersWordManifoldsControllerWordManifoldSpellCorrect = function(instanceName, textInput, callback) {
      var postBody = textInput;

      // verify the required parameter 'instanceName' is set
      if (instanceName === undefined || instanceName === null) {
        throw new Error("Missing the required parameter 'instanceName' when calling controllersWordManifoldsControllerWordManifoldSpellCorrect");
      }

      // verify the required parameter 'textInput' is set
      if (textInput === undefined || textInput === null) {
        throw new Error("Missing the required parameter 'textInput' when calling controllersWordManifoldsControllerWordManifoldSpellCorrect");
      }


      var pathParams = {
        'instance_name': instanceName
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APIKeyHeader'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = WordAndDistanceList;

      return this.apiClient.callApi(
        '/word_manifolds/{instance_name}/spell_correct', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
