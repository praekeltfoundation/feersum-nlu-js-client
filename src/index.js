/**
 * FeersumNLU API
 * This is the HTTP API for Feersum NLU. See https://github.com/praekelt/feersum-nlu-api-wrappers for examples of how to use the API.
 *
 * OpenAPI spec version: 2.0.3
 * Contact: nlu@feersum.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ClassLabel', 'model/ClassLabelList', 'model/ClassLabelPair', 'model/CreateDetails', 'model/DashboardDetail', 'model/DashboardModelDetail', 'model/DateList', 'model/DucklingEntCreateDetails', 'model/DucklingInstanceDetail', 'model/DucklingInstanceDetailList', 'model/Entity', 'model/EntityList', 'model/InstanceDetail', 'model/InstanceDetailList', 'model/LabeledWordManifold', 'model/LabelledTextSample', 'model/LabelledTextSampleList', 'model/Lr4CreateDetails', 'model/Lr4InstanceDetail', 'model/Lr4InstanceDetailList', 'model/ModelDate', 'model/NewWord', 'model/NewWordList', 'model/RegexEntCreateDetails', 'model/RegexInstanceDetail', 'model/RegexInstanceDetailList', 'model/ScoredLabel', 'model/ScoredLabelList', 'model/Sentiment', 'model/SimilarityEntCreateDetails', 'model/SimilarityInstanceDetail', 'model/SimilarityInstanceDetailList', 'model/TextInput', 'model/TotalSamples', 'model/TrainDetails', 'model/WordAndDistance', 'model/WordAndDistanceList', 'model/WordAndThreshold', 'api/DashboardApi', 'api/Date_parsersApi', 'api/Duckling_entity_extractorsApi', 'api/Faq_matchersApi', 'api/Intent_classifiersApi', 'api/Lr4_language_recognisersApi', 'api/Regex_entity_extractorsApi', 'api/Sentiment_detectorsApi', 'api/Similarity_entity_extractorsApi', 'api/Text_classifiersApi', 'api/Word_manifoldsApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/ClassLabel'), require('./model/ClassLabelList'), require('./model/ClassLabelPair'), require('./model/CreateDetails'), require('./model/DashboardDetail'), require('./model/DashboardModelDetail'), require('./model/DateList'), require('./model/DucklingEntCreateDetails'), require('./model/DucklingInstanceDetail'), require('./model/DucklingInstanceDetailList'), require('./model/Entity'), require('./model/EntityList'), require('./model/InstanceDetail'), require('./model/InstanceDetailList'), require('./model/LabeledWordManifold'), require('./model/LabelledTextSample'), require('./model/LabelledTextSampleList'), require('./model/Lr4CreateDetails'), require('./model/Lr4InstanceDetail'), require('./model/Lr4InstanceDetailList'), require('./model/ModelDate'), require('./model/NewWord'), require('./model/NewWordList'), require('./model/RegexEntCreateDetails'), require('./model/RegexInstanceDetail'), require('./model/RegexInstanceDetailList'), require('./model/ScoredLabel'), require('./model/ScoredLabelList'), require('./model/Sentiment'), require('./model/SimilarityEntCreateDetails'), require('./model/SimilarityInstanceDetail'), require('./model/SimilarityInstanceDetailList'), require('./model/TextInput'), require('./model/TotalSamples'), require('./model/TrainDetails'), require('./model/WordAndDistance'), require('./model/WordAndDistanceList'), require('./model/WordAndThreshold'), require('./api/DashboardApi'), require('./api/Date_parsersApi'), require('./api/Duckling_entity_extractorsApi'), require('./api/Faq_matchersApi'), require('./api/Intent_classifiersApi'), require('./api/Lr4_language_recognisersApi'), require('./api/Regex_entity_extractorsApi'), require('./api/Sentiment_detectorsApi'), require('./api/Similarity_entity_extractorsApi'), require('./api/Text_classifiersApi'), require('./api/Word_manifoldsApi'));
  }
}(function(ApiClient, ClassLabel, ClassLabelList, ClassLabelPair, CreateDetails, DashboardDetail, DashboardModelDetail, DateList, DucklingEntCreateDetails, DucklingInstanceDetail, DucklingInstanceDetailList, Entity, EntityList, InstanceDetail, InstanceDetailList, LabeledWordManifold, LabelledTextSample, LabelledTextSampleList, Lr4CreateDetails, Lr4InstanceDetail, Lr4InstanceDetailList, ModelDate, NewWord, NewWordList, RegexEntCreateDetails, RegexInstanceDetail, RegexInstanceDetailList, ScoredLabel, ScoredLabelList, Sentiment, SimilarityEntCreateDetails, SimilarityInstanceDetail, SimilarityInstanceDetailList, TextInput, TotalSamples, TrainDetails, WordAndDistance, WordAndDistanceList, WordAndThreshold, DashboardApi, Date_parsersApi, Duckling_entity_extractorsApi, Faq_matchersApi, Intent_classifiersApi, Lr4_language_recognisersApi, Regex_entity_extractorsApi, Sentiment_detectorsApi, Similarity_entity_extractorsApi, Text_classifiersApi, Word_manifoldsApi) {
  'use strict';

  /**
   * This_is_the_HTTP_API_for_Feersum_NLU__See_httpsgithub_compraekeltfeersum_nlu_api_wrappers_for_examples_of_how_to_use_the_API_.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var FeersumNluApi = require('index'); // See note below*.
   * var xxxSvc = new FeersumNluApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new FeersumNluApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new FeersumNluApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new FeersumNluApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 2.0.3
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The ClassLabel model constructor.
     * @property {module:model/ClassLabel}
     */
    ClassLabel: ClassLabel,
    /**
     * The ClassLabelList model constructor.
     * @property {module:model/ClassLabelList}
     */
    ClassLabelList: ClassLabelList,
    /**
     * The ClassLabelPair model constructor.
     * @property {module:model/ClassLabelPair}
     */
    ClassLabelPair: ClassLabelPair,
    /**
     * The CreateDetails model constructor.
     * @property {module:model/CreateDetails}
     */
    CreateDetails: CreateDetails,
    /**
     * The DashboardDetail model constructor.
     * @property {module:model/DashboardDetail}
     */
    DashboardDetail: DashboardDetail,
    /**
     * The DashboardModelDetail model constructor.
     * @property {module:model/DashboardModelDetail}
     */
    DashboardModelDetail: DashboardModelDetail,
    /**
     * The DateList model constructor.
     * @property {module:model/DateList}
     */
    DateList: DateList,
    /**
     * The DucklingEntCreateDetails model constructor.
     * @property {module:model/DucklingEntCreateDetails}
     */
    DucklingEntCreateDetails: DucklingEntCreateDetails,
    /**
     * The DucklingInstanceDetail model constructor.
     * @property {module:model/DucklingInstanceDetail}
     */
    DucklingInstanceDetail: DucklingInstanceDetail,
    /**
     * The DucklingInstanceDetailList model constructor.
     * @property {module:model/DucklingInstanceDetailList}
     */
    DucklingInstanceDetailList: DucklingInstanceDetailList,
    /**
     * The Entity model constructor.
     * @property {module:model/Entity}
     */
    Entity: Entity,
    /**
     * The EntityList model constructor.
     * @property {module:model/EntityList}
     */
    EntityList: EntityList,
    /**
     * The InstanceDetail model constructor.
     * @property {module:model/InstanceDetail}
     */
    InstanceDetail: InstanceDetail,
    /**
     * The InstanceDetailList model constructor.
     * @property {module:model/InstanceDetailList}
     */
    InstanceDetailList: InstanceDetailList,
    /**
     * The LabeledWordManifold model constructor.
     * @property {module:model/LabeledWordManifold}
     */
    LabeledWordManifold: LabeledWordManifold,
    /**
     * The LabelledTextSample model constructor.
     * @property {module:model/LabelledTextSample}
     */
    LabelledTextSample: LabelledTextSample,
    /**
     * The LabelledTextSampleList model constructor.
     * @property {module:model/LabelledTextSampleList}
     */
    LabelledTextSampleList: LabelledTextSampleList,
    /**
     * The Lr4CreateDetails model constructor.
     * @property {module:model/Lr4CreateDetails}
     */
    Lr4CreateDetails: Lr4CreateDetails,
    /**
     * The Lr4InstanceDetail model constructor.
     * @property {module:model/Lr4InstanceDetail}
     */
    Lr4InstanceDetail: Lr4InstanceDetail,
    /**
     * The Lr4InstanceDetailList model constructor.
     * @property {module:model/Lr4InstanceDetailList}
     */
    Lr4InstanceDetailList: Lr4InstanceDetailList,
    /**
     * The ModelDate model constructor.
     * @property {module:model/ModelDate}
     */
    ModelDate: ModelDate,
    /**
     * The NewWord model constructor.
     * @property {module:model/NewWord}
     */
    NewWord: NewWord,
    /**
     * The NewWordList model constructor.
     * @property {module:model/NewWordList}
     */
    NewWordList: NewWordList,
    /**
     * The RegexEntCreateDetails model constructor.
     * @property {module:model/RegexEntCreateDetails}
     */
    RegexEntCreateDetails: RegexEntCreateDetails,
    /**
     * The RegexInstanceDetail model constructor.
     * @property {module:model/RegexInstanceDetail}
     */
    RegexInstanceDetail: RegexInstanceDetail,
    /**
     * The RegexInstanceDetailList model constructor.
     * @property {module:model/RegexInstanceDetailList}
     */
    RegexInstanceDetailList: RegexInstanceDetailList,
    /**
     * The ScoredLabel model constructor.
     * @property {module:model/ScoredLabel}
     */
    ScoredLabel: ScoredLabel,
    /**
     * The ScoredLabelList model constructor.
     * @property {module:model/ScoredLabelList}
     */
    ScoredLabelList: ScoredLabelList,
    /**
     * The Sentiment model constructor.
     * @property {module:model/Sentiment}
     */
    Sentiment: Sentiment,
    /**
     * The SimilarityEntCreateDetails model constructor.
     * @property {module:model/SimilarityEntCreateDetails}
     */
    SimilarityEntCreateDetails: SimilarityEntCreateDetails,
    /**
     * The SimilarityInstanceDetail model constructor.
     * @property {module:model/SimilarityInstanceDetail}
     */
    SimilarityInstanceDetail: SimilarityInstanceDetail,
    /**
     * The SimilarityInstanceDetailList model constructor.
     * @property {module:model/SimilarityInstanceDetailList}
     */
    SimilarityInstanceDetailList: SimilarityInstanceDetailList,
    /**
     * The TextInput model constructor.
     * @property {module:model/TextInput}
     */
    TextInput: TextInput,
    /**
     * The TotalSamples model constructor.
     * @property {module:model/TotalSamples}
     */
    TotalSamples: TotalSamples,
    /**
     * The TrainDetails model constructor.
     * @property {module:model/TrainDetails}
     */
    TrainDetails: TrainDetails,
    /**
     * The WordAndDistance model constructor.
     * @property {module:model/WordAndDistance}
     */
    WordAndDistance: WordAndDistance,
    /**
     * The WordAndDistanceList model constructor.
     * @property {module:model/WordAndDistanceList}
     */
    WordAndDistanceList: WordAndDistanceList,
    /**
     * The WordAndThreshold model constructor.
     * @property {module:model/WordAndThreshold}
     */
    WordAndThreshold: WordAndThreshold,
    /**
     * The DashboardApi service constructor.
     * @property {module:api/DashboardApi}
     */
    DashboardApi: DashboardApi,
    /**
     * The Date_parsersApi service constructor.
     * @property {module:api/Date_parsersApi}
     */
    Date_parsersApi: Date_parsersApi,
    /**
     * The Duckling_entity_extractorsApi service constructor.
     * @property {module:api/Duckling_entity_extractorsApi}
     */
    Duckling_entity_extractorsApi: Duckling_entity_extractorsApi,
    /**
     * The Faq_matchersApi service constructor.
     * @property {module:api/Faq_matchersApi}
     */
    Faq_matchersApi: Faq_matchersApi,
    /**
     * The Intent_classifiersApi service constructor.
     * @property {module:api/Intent_classifiersApi}
     */
    Intent_classifiersApi: Intent_classifiersApi,
    /**
     * The Lr4_language_recognisersApi service constructor.
     * @property {module:api/Lr4_language_recognisersApi}
     */
    Lr4_language_recognisersApi: Lr4_language_recognisersApi,
    /**
     * The Regex_entity_extractorsApi service constructor.
     * @property {module:api/Regex_entity_extractorsApi}
     */
    Regex_entity_extractorsApi: Regex_entity_extractorsApi,
    /**
     * The Sentiment_detectorsApi service constructor.
     * @property {module:api/Sentiment_detectorsApi}
     */
    Sentiment_detectorsApi: Sentiment_detectorsApi,
    /**
     * The Similarity_entity_extractorsApi service constructor.
     * @property {module:api/Similarity_entity_extractorsApi}
     */
    Similarity_entity_extractorsApi: Similarity_entity_extractorsApi,
    /**
     * The Text_classifiersApi service constructor.
     * @property {module:api/Text_classifiersApi}
     */
    Text_classifiersApi: Text_classifiersApi,
    /**
     * The Word_manifoldsApi service constructor.
     * @property {module:api/Word_manifoldsApi}
     */
    Word_manifoldsApi: Word_manifoldsApi
  };

  return exports;
}));
