/**
 * FeersumNLU API
 * This is the HTTP API for Feersum NLU. See https://github.com/praekelt/feersum-nlu-api-wrappers for examples of how to use the API.
 *
 * OpenAPI spec version: 2.0.3
 * Contact: nlu@feersum.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';





/**
* The SimilarityInstanceDetail model module.
* @module model/SimilarityInstanceDetail
* @version 2.0.3
*/
export default class SimilarityInstanceDetail {
    /**
    * Constructs a new <code>SimilarityInstanceDetail</code>.
    * The model instance detail.
    * @alias module:model/SimilarityInstanceDetail
    * @class
    * @param id {String} The unique id of a specific version of the model instance.
    * @param name {String} The sluggy-url-friendly-name of the instance.
    * @param similarWords {Array.<String>} The list of similar words to test against.
    * @param threshold {Number} The threshold below which words are not similar.
    * @param wordManifold {String} The word manifold used to measure word similarity.
    */

    constructor(id, name, similarWords, threshold, wordManifold) {
        

        
        

        this['id'] = id;this['name'] = name;this['similar_words'] = similarWords;this['threshold'] = threshold;this['word_manifold'] = wordManifold;

        
    }

    /**
    * Constructs a <code>SimilarityInstanceDetail</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/SimilarityInstanceDetail} obj Optional instance to populate.
    * @return {module:model/SimilarityInstanceDetail} The populated <code>SimilarityInstanceDetail</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SimilarityInstanceDetail();

            
            
            

            if (data.hasOwnProperty('desc')) {
                obj['desc'] = ApiClient.convertToType(data['desc'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('similar_words')) {
                obj['similar_words'] = ApiClient.convertToType(data['similar_words'], ['String']);
            }
            if (data.hasOwnProperty('threshold')) {
                obj['threshold'] = ApiClient.convertToType(data['threshold'], 'Number');
            }
            if (data.hasOwnProperty('word_manifold')) {
                obj['word_manifold'] = ApiClient.convertToType(data['word_manifold'], 'String');
            }
        }
        return obj;
    }

    /**
    * The longer existential description of this instance's purpose in life.
    * @member {String} desc
    */
    desc = undefined;
    /**
    * The unique id of a specific version of the model instance.
    * @member {String} id
    */
    id = undefined;
    /**
    * The sluggy-url-friendly-name of the instance.
    * @member {String} name
    */
    name = undefined;
    /**
    * The list of similar words to test against.
    * @member {Array.<String>} similar_words
    */
    similar_words = undefined;
    /**
    * The threshold below which words are not similar.
    * @member {Number} threshold
    */
    threshold = undefined;
    /**
    * The word manifold used to measure word similarity.
    * @member {String} word_manifold
    */
    word_manifold = undefined;








}


