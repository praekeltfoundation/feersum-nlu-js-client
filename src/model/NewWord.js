/**
 * FeersumNLU API
 * This is the HTTP API for Feersum NLU. See https://github.com/praekelt/feersum-nlu-api-wrappers for examples of how to use the API.
 *
 * OpenAPI spec version: 2.0.3
 * Contact: nlu@feersum.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';





/**
* The NewWord model module.
* @module model/NewWord
* @version 2.0.3
*/
export default class NewWord {
    /**
    * Constructs a new <code>NewWord</code>.
    * A new word similar to an existing word.
    * @alias module:model/NewWord
    * @class
    * @param newWord {String} 
    * @param similarTo {String} 
    */

    constructor(newWord, similarTo) {
        

        
        

        this['new_word'] = newWord;this['similar_to'] = similarTo;

        
    }

    /**
    * Constructs a <code>NewWord</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/NewWord} obj Optional instance to populate.
    * @return {module:model/NewWord} The populated <code>NewWord</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NewWord();

            
            
            

            if (data.hasOwnProperty('new_word')) {
                obj['new_word'] = ApiClient.convertToType(data['new_word'], 'String');
            }
            if (data.hasOwnProperty('similar_to')) {
                obj['similar_to'] = ApiClient.convertToType(data['similar_to'], 'String');
            }
        }
        return obj;
    }

    /**
    * @member {String} new_word
    */
    new_word = undefined;
    /**
    * @member {String} similar_to
    */
    similar_to = undefined;








}


