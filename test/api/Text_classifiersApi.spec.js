/**
 * FeersumNLU API
 * This is the HTTP API for Feersum NLU. See https://github.com/praekelt/feersum-nlu-api-wrappers for examples of how to use the API.
 *
 * OpenAPI spec version: 2.0.3
 * Contact: nlu@feersum.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.FeersumNluApi);
  }
}(this, function(expect, FeersumNluApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new FeersumNluApi.Text_classifiersApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Text_classifiersApi', function() {
    describe('textClassifierAddTrainingSamples', function() {
      it('should call textClassifierAddTrainingSamples successfully', function(done) {
        //uncomment below and update the code to test textClassifierAddTrainingSamples
        //instance.textClassifierAddTrainingSamples(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('textClassifierCreate', function() {
      it('should call textClassifierCreate successfully', function(done) {
        //uncomment below and update the code to test textClassifierCreate
        //instance.textClassifierCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('textClassifierCurate', function() {
      it('should call textClassifierCurate successfully', function(done) {
        //uncomment below and update the code to test textClassifierCurate
        //instance.textClassifierCurate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('textClassifierDelTrainingSamples', function() {
      it('should call textClassifierDelTrainingSamples successfully', function(done) {
        //uncomment below and update the code to test textClassifierDelTrainingSamples
        //instance.textClassifierDelTrainingSamples(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('textClassifierGetDetails', function() {
      it('should call textClassifierGetDetails successfully', function(done) {
        //uncomment below and update the code to test textClassifierGetDetails
        //instance.textClassifierGetDetails(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('textClassifierGetDetailsAll', function() {
      it('should call textClassifierGetDetailsAll successfully', function(done) {
        //uncomment below and update the code to test textClassifierGetDetailsAll
        //instance.textClassifierGetDetailsAll(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('textClassifierGetLabels', function() {
      it('should call textClassifierGetLabels successfully', function(done) {
        //uncomment below and update the code to test textClassifierGetLabels
        //instance.textClassifierGetLabels(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('textClassifierGetTrainingSamples', function() {
      it('should call textClassifierGetTrainingSamples successfully', function(done) {
        //uncomment below and update the code to test textClassifierGetTrainingSamples
        //instance.textClassifierGetTrainingSamples(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('textClassifierRetrieve', function() {
      it('should call textClassifierRetrieve successfully', function(done) {
        //uncomment below and update the code to test textClassifierRetrieve
        //instance.textClassifierRetrieve(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('textClassifierTrain', function() {
      it('should call textClassifierTrain successfully', function(done) {
        //uncomment below and update the code to test textClassifierTrain
        //instance.textClassifierTrain(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
