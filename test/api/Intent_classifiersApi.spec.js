/**
 * FeersumNLU API
 * This is the HTTP API for Feersum NLU. See https://github.com/praekelt/feersum-nlu-api-wrappers for examples of how to use the API.
 *
 * OpenAPI spec version: 2.0.3
 * Contact: nlu@feersum.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.FeersumNluApi);
  }
}(this, function(expect, FeersumNluApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new FeersumNluApi.Intent_classifiersApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Intent_classifiersApi', function() {
    describe('controllersIntentClassifiersControllerIntentClassifierAddTrainingSamples', function() {
      it('should call controllersIntentClassifiersControllerIntentClassifierAddTrainingSamples successfully', function(done) {
        //uncomment below and update the code to test controllersIntentClassifiersControllerIntentClassifierAddTrainingSamples
        //instance.controllersIntentClassifiersControllerIntentClassifierAddTrainingSamples(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('controllersIntentClassifiersControllerIntentClassifierCreate', function() {
      it('should call controllersIntentClassifiersControllerIntentClassifierCreate successfully', function(done) {
        //uncomment below and update the code to test controllersIntentClassifiersControllerIntentClassifierCreate
        //instance.controllersIntentClassifiersControllerIntentClassifierCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('controllersIntentClassifiersControllerIntentClassifierCurate', function() {
      it('should call controllersIntentClassifiersControllerIntentClassifierCurate successfully', function(done) {
        //uncomment below and update the code to test controllersIntentClassifiersControllerIntentClassifierCurate
        //instance.controllersIntentClassifiersControllerIntentClassifierCurate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('controllersIntentClassifiersControllerIntentClassifierDelTrainingSamples', function() {
      it('should call controllersIntentClassifiersControllerIntentClassifierDelTrainingSamples successfully', function(done) {
        //uncomment below and update the code to test controllersIntentClassifiersControllerIntentClassifierDelTrainingSamples
        //instance.controllersIntentClassifiersControllerIntentClassifierDelTrainingSamples(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('controllersIntentClassifiersControllerIntentClassifierGetDetails', function() {
      it('should call controllersIntentClassifiersControllerIntentClassifierGetDetails successfully', function(done) {
        //uncomment below and update the code to test controllersIntentClassifiersControllerIntentClassifierGetDetails
        //instance.controllersIntentClassifiersControllerIntentClassifierGetDetails(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('controllersIntentClassifiersControllerIntentClassifierGetDetailsAll', function() {
      it('should call controllersIntentClassifiersControllerIntentClassifierGetDetailsAll successfully', function(done) {
        //uncomment below and update the code to test controllersIntentClassifiersControllerIntentClassifierGetDetailsAll
        //instance.controllersIntentClassifiersControllerIntentClassifierGetDetailsAll(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('controllersIntentClassifiersControllerIntentClassifierGetLabels', function() {
      it('should call controllersIntentClassifiersControllerIntentClassifierGetLabels successfully', function(done) {
        //uncomment below and update the code to test controllersIntentClassifiersControllerIntentClassifierGetLabels
        //instance.controllersIntentClassifiersControllerIntentClassifierGetLabels(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('controllersIntentClassifiersControllerIntentClassifierGetTrainingSamples', function() {
      it('should call controllersIntentClassifiersControllerIntentClassifierGetTrainingSamples successfully', function(done) {
        //uncomment below and update the code to test controllersIntentClassifiersControllerIntentClassifierGetTrainingSamples
        //instance.controllersIntentClassifiersControllerIntentClassifierGetTrainingSamples(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('controllersIntentClassifiersControllerIntentClassifierOnlineTrainingSamples', function() {
      it('should call controllersIntentClassifiersControllerIntentClassifierOnlineTrainingSamples successfully', function(done) {
        //uncomment below and update the code to test controllersIntentClassifiersControllerIntentClassifierOnlineTrainingSamples
        //instance.controllersIntentClassifiersControllerIntentClassifierOnlineTrainingSamples(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('controllersIntentClassifiersControllerIntentClassifierRetrieve', function() {
      it('should call controllersIntentClassifiersControllerIntentClassifierRetrieve successfully', function(done) {
        //uncomment below and update the code to test controllersIntentClassifiersControllerIntentClassifierRetrieve
        //instance.controllersIntentClassifiersControllerIntentClassifierRetrieve(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('controllersIntentClassifiersControllerIntentClassifierTrain', function() {
      it('should call controllersIntentClassifiersControllerIntentClassifierTrain successfully', function(done) {
        //uncomment below and update the code to test controllersIntentClassifiersControllerIntentClassifierTrain
        //instance.controllersIntentClassifiersControllerIntentClassifierTrain(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
